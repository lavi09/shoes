networks:
  backend: {}
  frontend: {}
services:
  basket.data:
    image: redis
    networks:
      backend: null
    ports:
    - published: 6378
      target: 6379
  cart:
    build:
      context: C:\Users\Administrator\source\repos\Shoes\CartApi
      dockerfile: Dockerfile
    container_name: cartapi
    depends_on:
    - basket.data
    - tokenserver
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionString: basket.data
      IdentityUrl: http://tokenserver
    image: cartimage
    networks:
      backend: null
      frontend: null
    ports:
    - published: 5050
      target: 80
  catalog:
    build:
      context: C:\Users\Administrator\source\repos\Shoes\ProductCatalogAPI
      dockerfile: Dockerfile
    container_name: catalogapi
    depends_on:
    - mssqlserver
    environment:
      DatabaseName: CatalogDb
      DatabaseServer: mssqlserver
      DatabaseUser: sa
      DatabaseUserPassword: ProductApi(!)
      ExternalCatalogBaseUrl: http://localhost:5010
    image: shoes/catalogapi
    networks:
      backend: null
      frontend: null
    ports:
    - published: 5010
      target: 80
  mssqlserver:
    container_name: catalogdb
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ProductApi(!)
    image: microsoft/mssql-server-linux:latest
    networks:
      backend: null
    ports:
    - published: 1445
      target: 1433
  order:
    build:
      context: C:\Users\Administrator\source\repos\Shoes\OrderApi
      dockerfile: Dockerfile
    container_name: orderapi
    depends_on:
    - mssqlserver
    - rabbitmq
    - tokenserver
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DATABASE: OrdersDb
      IdentityUrl: http://tokenserver
      SA_PASSWORD: ProductApi(!)
      SQLSERVER_HOST: catalogdb
    image: shoes/order
    networks:
      backend: null
      frontend: null
    ports:
    - published: 5600
      target: 80
  rabbitmq:
    container_name: rabbitmq
    hostname: myrabbitmq
    image: rabbitmq:3-management
    networks:
      backend: null
    ports:
    - published: 15672
      target: 15672
    - published: 5672
      target: 5672
    - published: 5671
      target: 5671
    volumes:
    - C:\Users\Administrator\rabbitmq:/var/lib/rabbitmq/mnesia:rw
  tokenserver:
    build:
      context: C:\Users\Administrator\source\repos\Shoes\TokenServiceApi
      dockerfile: Dockerfile
    container_name: tokenserviceapi
    depends_on:
    - mssqlserver
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      BasketApiClient: http://localhost:5050
      MvcClient: http://localhost:5200
    networks:
      backend: null
      frontend: null
    ports:
    - published: 5020
      target: 80
  webmvc:
    build:
      context: C:\Users\Administrator\source\repos\Shoes\WebMvc
      dockerfile: Dockerfile
    container_name: webshop
    depends_on:
    - catalog
    - order
    - tokenserver
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CallBackUrl: http://localhost:5200
      CartUrl: http://cart
      CatalogUrl: http://catalog
      IdentityUrl: http://10.0.0.223:5020
      OrderUrl: http://order
      StripePrivateKey: sk_test_UTck9qZ8Cm7PT9No2zZeTJuY00EqX4CdHz
      StripePublicKey: pk_test_2mYn1FuQBQXr0YPbvIjBUOZw0021ECoOYt
    networks:
      frontend: null
    ports:
    - published: 5200
      target: 80
version: '3.4'