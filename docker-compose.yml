version: "3.4"

networks:
    frontend:
    backend:

services:
    catalog:
        build:
            context: .\ProductCatalogAPI
            dockerfile: Dockerfile
        image: shoes/catalogapi
        environment:
            DatabaseServer: mssqlserver
            DatabaseName: CatalogDb
            DatabaseUser: sa
            DatabaseUserPassword: ProductApi(!)
            ExternalCatalogBaseUrl: http://localhost:5010
        container_name: catalogapi
        ports:
            - "5010:80"
        networks:
            - backend
            - frontend
        depends_on:
            - mssqlserver

    tokenserver:
        build: 
            context: .\TokenServiceApi
            dockerfile: Dockerfile
        environment: 
            ASPNETCORE_ENVIRONMENT: Development 
            MvcClient: http://localhost:5200 
            BasketApiClient: http://localhost:5050
        container_name: tokenserviceapi
        ports:
            - "5020:80"
        networks:
            - backend
            - frontend 
        depends_on:
            - mssqlserver

    cart:
        image: cartimage
        build: 
            context: .\CartApi
            dockerfile: Dockerfile
        environment: 
            ASPNETCORE_ENVIRONMENT: Development 
            IdentityUrl: http://tokenserver
            ConnectionString: basket.data
        container_name: cartapi
        ports:
            - "5050:80"
        networks:
            - backend
            - frontend 
        depends_on:
            - basket.data
            - tokenserver
           

    webmvc:
        build: 
            context: .\WebMvc
            dockerfile: Dockerfile
        environment: 
            ASPNETCORE_ENVIRONMENT: Development 
            CatalogUrl: http://catalog
            IdentityUrl: http://10.0.0.223:5020
            CallBackUrl: http://localhost:5200
            CartUrl: http://cart
            OrderUrl: http://order
            StripePublicKey: pk_test_2mYn1FuQBQXr0YPbvIjBUOZw0021ECoOYt
            StripePrivateKey: sk_test_UTck9qZ8Cm7PT9No2zZeTJuY00EqX4CdHz
        container_name: webshop
        ports:
            - "5200:80"
        networks:
            - frontend 
        depends_on:
            - catalog
            - tokenserver
            - order

    order:
        image: shoes/order
        build: 
            context: .\OrderApi
            dockerfile: Dockerfile
    
        environment: 
            ASPNETCORE_ENVIRONMENT: Development 
            IdentityUrl: http://tokenserver
            SQLSERVER_HOST: catalogdb
            SA_PASSWORD: ProductApi(!)
            DATABASE: OrdersDb
        container_name: orderapi
        ports:
            - "5600:80"
        networks:
            - backend
            - frontend 
        depends_on:
            - mssqlserver
            - tokenserver 
            - rabbitmq

    mssqlserver:
        image: "microsoft/mssql-server-linux:latest"
        environment:
            ACCEPT_EULA: Y
            SA_PASSWORD: ProductApi(!)
        container_name: catalogdb
        ports:
            - "1445:1433"
        networks:
            - backend

    basket.data:
        image: redis
        ports:
            - "6378:6379"  
        networks:
            - backend 

    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        hostname: myrabbitmq
        ports:
            - "15672:15672"
            - "5672:5672"
            - "5671:5671"
        volumes:
            - ~/rabbitmq:/var/lib/rabbitmq/mnesia   
        networks:
            - backend 

